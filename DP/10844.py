"""
45656
이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.
N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지
"""
"""
처음에는 길이가 n인 계단 수의 개수를 f(n)이라고 두고, 이에 대한 점화 관계를 찾으려고 했다. 
하지만 0이나 9 다음에는 하나의 수만 올 수 있으며, 0으로는 수가 시작할 수 없다는 조건 때문에 점화 관계를 구하기 어려웠다. 
끝이 0, 1, 8, 9로 끝나는 경우를 따로 세는 방법도 생각해보았으나, 그럴 경우 너무 복잡해졌다.
<< 지금 상태 

 2차원 배열의 점화 관계가 필요함
stairs라고 할 때, stairs[i][j + 1]는 j로 끝나는 i자리 수의 계단 수를 의미
"""
if __name__=="__main__":
    N = int(input())
    arr = [[0] * 10 for _ in range(N + 1)]

    # 초기값 설정
    arr[1] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    for i in range(2, N+1):
        for j in range(0,10):
            if j not in [0,9]:
                arr[i][j] = arr[i-1][j+1] + arr[i-1][j-1]
            if j == 0:
                arr[i][j] = arr[i-1][j+1]
            if j == 9:
                arr[i][j] = arr[i-1][j-1]
    #print(arr)
    print(sum(arr[N])%1000000000)


